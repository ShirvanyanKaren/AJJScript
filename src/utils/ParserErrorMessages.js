// utils/ParserErrorMessages.js

const ParserErrors = {
    EXPECT_CLASS_KEYWORD: "Expected 'class' keyword",
    EXPECT_CLASS_NAME: "Expected class name",
    EXPECT_LEFT_PAREN_AFTER_CLASS: "Expected '(' after class name",
    EXPECT_RIGHT_PAREN_AFTER_CLASS: "Expected ')' after class name",
    EXPECT_SUPERCLASS_NAME: "Expected superclass name",
    EXPECT_LEFT_CURLY: "Expected '{' to start class body",  
    EXPECT_RIGHT_CURLY: "Expected '}' after class body",
    EXPECT_SEMICOLON_AFTER_VARDEC: "Expected ';' after variable declaration",
    EXPECT_VARIABLE_NAME: "Expected variable name",
    EXPECT_SEMICOLON_AFTER_VARDEC_ASSIGN: "Expected ';' after variable declaration and assignment",
    EXPECT_CONSTRUCTOR_PARAMS_END: "Expected ')' after constructor parameters",
    EXPECT_SUPER_ARGS_END: "Expected ')' after super arguments",
    EXPECT_CONSTRUCTOR_BODY_END: "Expected '}' after constructor body",
    EXPECT_METHOD_NAME: "Expected me thod name",
    EXPECT_METHOD_PARAMS_END: "Expected ')' after method parameters",
    EXPECT_METHOD_BODY_START: "Expected '{' to start method body",
    EXPECT_METHOD_BODY_END: "Expected '}' after method body",
    EXPECT_LEFT_PAREN_AFTER_IF: "Expected '(' after if",
    EXPECT_RIGHT_PAREN_AFTER_IF: "Expected ')' after if condition",
    EXPECT_SEMICOLON_AFTER_BREAK: "Expected ';' after break statement",
    EXPECT_SEMICOLON_AFTER_RETURN: "Expected ';' after return statement",
    EXPECT_LEFT_PAREN_AFTER_WHILE: "Expected '(' after while",
    EXPECT_RIGHT_PAREN_AFTER_WHILE: "Expected ')' after while condition",
    EXPECT_RIGHT_CURLY_AFTER_BLOCK: "Expected '}' after block",
    EXPECT_LEFT_PAREN_AFTER_INIT: "Expected '(' after 'init'",
    EXPECT_LEFT_PAREN_AFTER_SUPER: "Expected '(' after 'super'",
    EXPECT_FIELD_OR_METHOD_NAME_AFTER_DOT: "Expected field or method name after '.'",
    EXPECT_LEFT_PAREN_AFTER_METHOD: "Expected '(' after method name",
    EXPECT_RIGHT_PAREN_AFTER_ARGS: "Expected ')' after arguments",
    EXPECT_RIGHT_PAREN_AFTER_NEW_ARGS: "Expected ')' after new arguments",
    EXPECT_RIGHT_PAREN_AFTER_PRINT: "Expected ')' after println argument",
    EXPECT_LEFT_PAREN_AFTER_PRINT: "Expected '(' after println",
    EXPECT_LEFT_PAREN_AFTER_METHOD_NAME: "Expected '(' after method name",
    EXPECT_TERNARY_COLON: "Expected ':' in ternary expression",
    EXPECT_RIGHT_CURLY_AFTER_SUPER: "Expected '}' after super call",
    EXPECT_RIGHT_CURLY_AFTER_CONSTRUCTOR : "Expected '}' after constructor",
    EXPECT_RIGHT_PAREN_AFTER_EXP: "Expected ')' after expression",
    EXPECT_METHOD_KEYWORD: "Expected 'method' keyword",
    EXPECTED_METHOD_NAME: "Expected method name",
  };
  
  module.exports = ParserErrors;
  